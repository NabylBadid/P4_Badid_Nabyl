{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1036{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\ul\b\i\f0\fs44\lang12 Explications des commits du P4\par
\par
\par

\pard\sa200\sl276\slmult1\i0\fs22 Commit 1 :  creation class Database et methode de connexion a la BDD\par
\b0 Explication \ulnone :  Dans ce chapitre, nous avons travaill\'e9 avec notre classe  Database  qui permettra d'interagir avec notre base de donn\'e9es.\par
\ul\b Commit 2 : Ajout de la classe Article permettant de recuperer la liste des articles et un article en particulier\par
\b0 Explication : \ulnone Dans ce chapitre, nous avons ajout\'e9 une classe  Article  connect\'e9e \'e0 notre base de donn\'e9es qui nous permet d'afficher la liste des articles sur la page  home.php  et un article en particulier sur la page  single.php  .\par
\ul\b Commit 3 : Refactorisation des classes Database et Article et affichage des resultats a laide dobjet\par
\b0 Explication :\ulnone  Dans ce chapitre, nous avons refactoris\'e9 notre classe  Database  et adapt\'e9 notre classe  Article , ainsi que nos fichiers home.php et single.php en cons\'e9quence.\par
\ul\b Commit 4 : Ajout de la classe Comment\par
\b0 Explication : \ulnone Dans ce chapitre, nous avons ajout\'e9 une classe  Comment connect\'e9e \'e0 notre base de donn\'e9es qui nous permet d'afficher la liste des commentaires sur la page  single.php  avec son article associ\'e9.\par
\ul\b Commit 5 : Architecture MVC mise en place et utilisation des namespaces pour nos DAO\par
\b0 Explication :\ulnone  Dans ce chapitre, nous avons mis en place une architecture MVC qui va nous servir pour la suite pour mieux organiser notre code. Nous en avons profit\'e9 pour ajouter les namespaces \'e0 nos DAO pour faciliter l'int\'e9gration d'un Autoloader.\par
\ul\b Commit 6 : Utilisation de composer pour notre Autoloader\par
\b0 Explication :\ulnone  nous avons ajout\'e9 un Autoloader pour limiter l'utilisation des require multiple dans notre application et faciliter l'inclusion automatique de nos classes PHP Et nous avons utilis\'e9 Composer pour avoir un autoloader plus performant.\par
\ul\b Commit 7 : Mise en place d'un contr\'f4leur frontal avec le fichier index.php\par
\b0 Explication : \ulnone Dans ce chapitre, nous avons ajout\'e9 notre contr\'f4leur frontal, repr\'e9sent\'e9 par le fichier  index.php  , qui intercepte toutes les requ\'eates et renvoie vers la vue en cons\'e9quence. Nous en avons aussi profit\'e9 pour centraliser l'appel \'e0 notre fichier de configuration, ainsi que l'appel \'e0 notre Autoloader.\par
\ul\b Commit 8 : Ajout de la classe Router pour centraliser dans un meme fichier l'appel \'e0 toutes nos routes\par
\b0 Explication : \ulnone Dans ce chapitre, nous avons ajout\'e9 un Router pour centraliser dans un m\'eame fichier l'appel \'e0 toutes nos routes. Ce fichier est appel\'e9 par le contr\'f4leur frontal, index.php qui intercepte toutes les requ\'eates.\par
\ul\b Commit 9 : Mise en place des contr\'f4leurs Front, Back et Error pour respecter le model MVC \par
\b0 Explication : \ulnone Dans ce chapitre, nous avons mis en place nos contr\'f4leurs pour respecter le mod\'e8le MVC. Nous allons maintenant nous occuper de la partie model de notre MVC.\par
\ul\b Commit 10 : Mise en place du model avec les classes Article et Comment pour utiliser au maximum la POO\par
\b0 Explication : \ulnone Dans ce chapitre, nous avons mis en place nos objets pour utiliser un maximum la programmation orient\'e9e objet.\par
note : cr\'e9ation des classes Article et Comment pour creer nos articles et commentaires  \'e0 partir de ces classes et non du la appel a SetFetchMode ( class..).\par
\ul\b Commit 11 : Cr\'e9ation de la classe View qui g\'e8re nos templates \par
Commit 12 : Mise en place de la fonctionnalit\'e9 d'ajout d'article\par
\b0 Explication :\ulnone  Ajout de la m\'e9thode ajout d'article dans le backcontroller, redirection dans l'index vers la page d'ajout, ajout du templates correspodant. Nous mettrons plus tard en place la notion de contraintes.\par
\ul\b Commit 13 :  Cr\'e9ation de la classe Controller pour centraliser les codes se r\'e9p\'e9tant dans nos contr\'f4leurs\par
\b0 Explication :\ulnone  Centralisation des use, propri\'e9tes et des contructor se r\'e9p\'e9tant dans FrontController BackControlleur et ErrorController.\par
\ul\b Commit 14 : Creation de la classe Request qui g\'e8re la requete client au format objet\par
\b0 Explication : \ulnone On peut voir ces modifications dans les tests fait dans notre Router.\par
\ul\b Commit 15 : Cr\'e9ation de la classe Session pour g\'e9rer la session client au format objet\par
Commit 16 : Mise en place de la modification d'un article\par
Commit 17 : Centralisation des formulaires pour article dans le fichier form_article\par
Commit 18 : Mise en place de contraintes pour la soumission des formulaires\b0\par
\b Commit 19 : Mise en place de la suprresion d'un article avec ses commentaires\par
Commit 20 : Mise en place de l'ajout de commentaires\par
Commit 21 : Mise en place de la signalisation dun commentaire\par
Commit 22 : Mise en place du syst\'e8me d'inscripton\par
\b0 Explication :\ulnone  le contr\'f4le de la validation des donn\'e9es a \'e9t\'e9 mis en place \'e9galement.\par
\ul\b Commit 23 : Mise en place de la connexion, deconnexion et d'une page de profil\par
Commit 24 : Mise en place de la suppression d'un compte\par
Commit 25 : Mise en place d'un espace d'administration\par
\b0 Explication :\ulnone  Ajout de la route, cr\'e9ation template administration, cr\'e9ation d'une cl\'e9 \'e9trang\'e8re qui g\'e8rera la connexion entre la nouvelle table 'r\'f4le' et la table 'user'.\par
definition : les \b cl\'e9s \'e9trang\'e8res\b0 , qui permettent de g\'e9rer des \b relations entre plusieurs tables\b0 , et garantissent la \b coh\'e9rence des donn\'e9es\b0 .\par
\ul\b Commit 26 : Mise en de la gestion des articles depuis l'espace d'administration\par
\b0 Explication :\ulnone  Affichage des articles dans l'espace d'admnistration\par
possibilit\'e9 de modifier ou supprimer les articles \par
\ul\b Commit 27 : Mise en place de la gestion des commentaires depuis l'espace d'administration\par
\b0 Explication :\ulnone  Affichage des commentaires signal\'e9s avce possibilit\'e9 de les supprimer ou de les d\'e9signaler\par
\ul\b Commit 28 : S\'e9curisation des routes menant au backcontroller en verifiant si l'utilisateur est connect\'e9 (DERNIER COMMIT LIER AU TUTO)\par
\b0 Explication :\ulnone  on v\'e9rifie \'e9galement si le membre est un administrateur pour lui laisser l'acc\'e8s \'e0 certaines fonctionnalit\'e9s comme supprimer un membre, d\'e9signaler un commentaire ...\par
\ul\b Commit 29 : Ajout d'une interface WYSIWYG bass\'e9 sur tinyMCE\par
Commit 30 : Petites corrections sur l'interface WYSIWYG\par
\b0 Explication :\ulnone  l'interface a \'e9t\'e9 mise en fran\'e7ais, la fonction htmlspecialchars() a \'e9t\'e9 retir\'e9e pour que les balises HTML soit interpr\'e9t\'e9es correctement.\par
\ul\b Commit 31 : Ajout d'un header\par
Commit 32 : Ajout d'un footer\par
Commit 33 : Habillage de la page d'acceuil\ulnone\b0\par
\ul\b Commit 34 : Habillage de la page affichant un seul article\par
\ulnone\b0 Single.php\par
\ul\b Commit 35 : Centralisation du form dinscription et de connection dans form_user.php les messages de sessions decentraliser dans showSession.php et habillage des formulaires avec bootstrap\par
\b0 Explication :\ulnone  showSession.php n'est appel\'e9 que dans la home.php\par
\ul\b Commit 36 : Habillage de la page d'administration\par
Commit 37 : Ajout de la modification de commentaires\par
\b0 Explication :\ulnone  Cette fonctionnalit\'e9 n'\'e9tait pas pr\'e9sentes dans le tuto. \par
Modifications de quelques redirections. ( apr\'e8s le modification, ajout et suppression de commentaires ).\ul\par
\b Commit 38 : Habillage de la page de profil + Affichage des commentaires de l'user\par
Commit 39 :  Relooking des commentaires\par
Commit 40 : Formattage du code PHP (indentation normalis\'e9e) ert application du principe de cha\'eenage des m\'e9thodes dans les DAO\par
\b0 Explication \ulnone : Utilisation du plugin vscode "PHP Formatter" et du raccourci clavier : shift+alt+F\b\par
\ul Commit 41 : Valeur bind\'e9es dans les DAO et utilisation du typage explicite (type hinting)\par
\b0 Explication :\ulnone  Les valeurs transmises dans les requ\'eates SQL sont bind\'e9es pour que le SQL comprenne que les values sont des param\'e8tres de la requ\'eate et qu'ils ne peuvent donc pas la terminer. Cad qu'SQL va \'e9chapper ces attributs (',"...) pour \'e9viter les injections SQL.\par
Les typages explicites : Le typage explicite a \'e9t\'e9 introduit avec le PHP5 et correspond au fait de pouvoir imposer un typage aux param\'e8tres de nos m\'e9thodes. (pierre giraud) \par
\ul\b Commit 42 : Ajout de bloc info surs tous les attributs, classes et m\'e9thodes\par
\b0 Explication :\ulnone  Utilisation du plugin vscode "PHP DocBlock" et du raccourci : /** puis Entr\'e9e\ul\b\par
Commit 43 : Dans les dossier constraint, les noms des m\'e9thodes sont r\'e9cup\'e9r\'e9s dynamisquemetn gr\'e2ce \'e0 la m\'e9thode getMethodName() dans Constraint\par
\b0 Explication :\ulnone  "dans Constraint" = dans la Class constraint.\par
\ul\b Commit 44 : Les commentaires de chaque article/user sont maintenant un de leurs attributs, les entit\'e9s Article et User sont maintenant compl\'e8tes\par
\b0 Explication :\ulnone  Article et User ont maintenant un attribut $comments.\par
\ul\b Commit 45 : \ulnone\b0\par
 \par
}
 